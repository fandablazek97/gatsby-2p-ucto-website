.ui-input {
  --input-floating-label-shift: 67%; /* center floating label vertically */
  --input-floating-label-focus-scale: 0.8;

  position: relative;
  display: block;
  width: 100%;
  height: auto;
  font-size: var(--form-font-size);
  color: hsl(var(--form-text-color));
  font-weight: var(--form-font-weight);
  text-transform: var(--form-text-transform);

  & input,
  & textarea {
    width: 100%;
    padding: var(--form-input-py) var(--form-input-px);
    background-color: hsl(var(--form-input-bg));
    border: var(--form-border-width) solid hsl(var(--form-border-color));
    border-radius: var(--form-border-radius);
    transition: var(--transition-background), var(--transition-color),
      var(--transition-border), var(--transition-shadow),
      var(--transition-outline);

    &::placeholder {
      color: hsl(var(--form-text-color));
      font-weight: var(--form-font-weight);
      text-transform: var(--form-text-transform);
      opacity: var(--form-placeholder-label-opacity);
    }
  }

  /* Textarea only */
  & textarea {
    resize: vertical;
    white-space: pre-wrap;
    max-width: 100%;
    min-height: 10.5rem;
  }

  /* Floating labels */
  & .input-floating {
    padding-top: calc(var(--form-font-size) * 1.25);

    &:focus + label,
    &:not(:placeholder-shown) + label {
      transform: translateY(0) scale(var(--input-floating-label-focus-scale));
      opacity: var(--form-placeholder-label-opacity);
    }

    &::placeholder {
      color: transparent;
    }

    &[required] + label::after {
      color: hsl(var(--color-error));
      content: " *";
    }
  }

  & label {
    position: absolute;
    top: calc(var(--form-input-py) / 2);
    left: var(--form-input-px);
    pointer-events: none;
    color: hsl(var(--form-text-color));
    font-weight: var(--form-font-weight);
    text-transform: var(--form-text-transform);
    will-change: transform, opacity;
    transition: var(--transition-transform), var(--transition-opacity),
      var(--transition-color);
    transform: translateY(
      calc(var(--input-floating-label-shift) - var(--form-input-py))
    );
    transform-origin: 0 0;
  }

  /* Inpiut type file */
  & input[type="file"] {
    cursor: pointer;
    padding: 0;
    overflow: hidden;
  }

  & ::-webkit-file-upload-button,
  & ::file-selector-button {
    top: 0;
    left: 0;
    bottom: 0;
    height: 100%;
    width: auto;
    color: hsl(var(--form-text-color));
    font-size: var(--form-font-size);
    padding: var(--form-input-py) calc(var(--form-input-py) * 2.5);
    margin-right: 1em;
    background-color: hsl(var(--form-border-color));
    border: var(--form-border-width) solid hsl(var(--form-border-color));
    border-radius: var(--form-border-radius);
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;

    transition: var(--transition-background), var(--transition-color),
      var(--transition-border);
  }

  /* Input type color */
  & input[type="color"] {
    width: 4rem;
    height: 3rem;
    padding: var(--form-input-py);
    cursor: pointer;
    overflow: hidden;
  }

  /* Sizes */
  &[data-size="sm"] {
    --form-font-size: 0.85rem;
  }

  &[data-size="lg"] {
    --form-font-size: 1.15rem;
  }

  /* Disabled */
  &[disabled] {
    opacity: 0.45;
    pointer-events: none;
    cursor: not-allowed;
  }
}

/* Flushed style only */
.ui-form-flushed .ui-input {
  overflow: hidden;

  & input,
  & textarea {
    border-bottom: var(--form-border-bottom-width) solid
      hsl(var(--form-border-color));

    &:focus {
      outline: none;
      border-color: hsla(
        var(--form-a11y-ring-color),
        var(--form-a11y-ring-opacity)
      );
      box-shadow: none;
    }
  }
}
